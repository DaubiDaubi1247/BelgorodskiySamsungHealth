import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { RootState } from '../../app/store';
import { ItrainigData, IsmallDataAboutTrainings, TrainingDataArr } from './../../API/trainingAPI/TtrainingAPI';
import { ItrainitState } from './Types';
import { getSmallDataAboutTrainings } from './thunk';


const initialState: ItrainitState = {
    smallDataTrainings : []
};

export const trainingSlice = createSlice({
    name: 'training',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
        setSmallData: (state, action: PayloadAction<TrainingDataArr>) => {
            state.smallDataTrainings = action.payload;
        },

    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    extraReducers: (builder) => {                                                        //для санок!!!!
        builder
            .addCase(getSmallDataAboutTrainings.fulfilled.type, (state, action: PayloadAction<IsmallDataAboutTrainings>) => {
                state.smallDataTrainings = action.payload.trainingArr
            })
    },
});

export const { setSmallData } = trainingSlice.actions;

export default trainingSlice.reducer;
